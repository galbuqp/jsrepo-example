{"version":3,"sources":["../src/types.ts","../src/constants.ts","../src/utils/registry-providers/azure.ts","../src/utils/blocks/ts/strings.ts","../src/utils/registry-providers/bitbucket.ts","../src/utils/registry-providers/github.ts","../src/utils/blocks/ts/url.ts","../src/utils/registry-providers/gitlab.ts","../src/utils/registry-providers/http.ts","../src/utils/blocks/ts/result.ts","../src/utils/manifest.ts","../src/utils/registry-providers/index.ts"],"names":["blockSchema","categorySchema","manifestMeta","peerDependencySchema","configFileSchema","manifestConfigFileSchema","manifestSchema","MANIFEST_FILE","CONFIG_FILE","DEFAULT_BRANCH","azure","url","opts","parsed","parseUrl","owner","repoName","normalizedUrl","project","ref","refs","state","resourcePath","versionType","token","filePath","color","fullyQualified","repo","rest","specifier","startsWithOneOf","str","strings","s","endsWithOneOf","bitbucket","f","headers","key","value","response","github","octokit","Octokit","tags","tag","join","segments","removeLeadingAndTrailingSlash","segment","newSegment","removeLeadingSlash","removeTrailingSlash","addTrailingSlash","gitlab","baseUrl","error","tempRef","http","u","parsedUrl","Result","result","success","failure","fn","val","Ok","err","Err","defaultVal","_","def","message","parseManifest","json","validated","R","providers","selectProvider","p","fetchRaw","verbose","fetchManifest","manifest"],"mappings":"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","file":"chunk-HDOB2X6K.js","sourcesContent":["import * as v from 'valibot';\n\nexport const blockSchema = v.object({\n\tname: v.string(),\n\tcategory: v.string(),\n\tlocalDependencies: v.array(v.string()),\n\tdependencies: v.array(v.string()),\n\tdevDependencies: v.array(v.string()),\n\ttests: v.boolean(),\n\tlist: v.optional(v.boolean(), true),\n\t/** Where to find the block relative to root */\n\tdirectory: v.string(),\n\tsubdirectory: v.boolean(),\n\tfiles: v.array(v.string()),\n\t_imports_: v.record(v.string(), v.string()),\n});\n\nexport const categorySchema = v.object({\n\tname: v.string(),\n\tblocks: v.array(blockSchema),\n});\n\nexport const manifestMeta = v.object({\n\tauthors: v.optional(v.array(v.string())),\n\tbugs: v.optional(v.string()),\n\tdescription: v.optional(v.string()),\n\thomepage: v.optional(v.string()),\n\trepository: v.optional(v.string()),\n\ttags: v.optional(v.array(v.string())),\n});\n\nexport const peerDependencySchema = v.record(\n\tv.string(),\n\tv.union([\n\t\tv.string(),\n\t\tv.object({\n\t\t\tversion: v.string(),\n\t\t\tmessage: v.string(),\n\t\t}),\n\t])\n);\n\nexport type PeerDependency = v.InferOutput<typeof peerDependencySchema>;\n\nexport const configFileSchema = v.object({\n\tname: v.string(),\n\tpath: v.string(),\n\texpectedPath: v.optional(v.string()),\n\toptional: v.optional(v.boolean(), false),\n});\n\nexport type ConfigFile = v.InferOutput<typeof configFileSchema>;\n\nexport const manifestConfigFileSchema = v.object({\n\t...configFileSchema.entries,\n\tdependencies: v.optional(v.array(v.string())),\n\tdevDependencies: v.optional(v.array(v.string())),\n});\n\nexport const manifestSchema = v.object({\n\tmeta: v.optional(manifestMeta),\n\tpeerDependencies: v.optional(peerDependencySchema),\n\tconfigFiles: v.optional(v.array(manifestConfigFileSchema)),\n\tcategories: v.array(categorySchema),\n});\n\nexport type Meta = v.InferOutput<typeof manifestMeta>;\n\nexport type Category = v.InferOutput<typeof categorySchema>;\n\nexport type Block = v.InferOutput<typeof blockSchema>;\n\nexport type Manifest = v.InferOutput<typeof manifestSchema>;\n","export const MANIFEST_FILE = 'jsrepo-manifest.json';\nexport const CONFIG_FILE = 'jsrepo.json';\n","import color from 'chalk';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface AzureProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tproject: string;\n\trefs: 'heads' | 'tags';\n\tref: string;\n}\n\n/** Valid paths\n *\n *  `azure/<org>/<project>/<repo>/(tags|heads)/<ref>`\n */\nexport const azure: RegistryProvider = {\n\tname: 'azure',\n\n\tmatches: (url) => url.toLowerCase().startsWith('azure'),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://dev.azure.com/${owner}/_git/${repoName}`;\n\t},\n\n\tstate: async (url) => {\n\t\tconst {\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\tproject,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\trefs,\n\t\t\tproject,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: azure,\n\t\t} satisfies AzureProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== azure.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${azure.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, project, ref, refs } = state as AzureProviderState;\n\n\t\tconst versionType = refs === 'tags' ? 'tag' : 'branch';\n\n\t\treturn new URL(\n\t\t\t`https://dev.azure.com/${owner}/${project}/_apis/git/repositories/${repoName}/items?path=${resourcePath}&api-version=7.2-preview.1&versionDescriptor.version=${ref}&versionDescriptor.versionType=${versionType}`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nconst parseUrl = (\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\towner: string;\n\tproject: string;\n\trepoName: string;\n\tref: string;\n\trefs: 'tags' | 'heads';\n\tspecifier?: string;\n} => {\n\tconst repo = url.replaceAll(/(azure\\/)/g, '');\n\n\tlet [owner, project, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined = undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string = DEFAULT_BRANCH;\n\n\t// checks if the type of the ref is tags or heads\n\tlet refs: 'heads' | 'tags' = 'heads';\n\n\tif (['tags', 'heads'].includes(rest[0])) {\n\t\trefs = rest[0] as 'heads' | 'tags';\n\n\t\tif (rest[1] && rest[1] !== '') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `azure/${owner}/${project}/${repoName}${ref ? `/${refs}/${ref}` : ''}`,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tproject,\n\t\tref,\n\t\trefs,\n\t\tspecifier,\n\t};\n};\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** Returns true if `str` starts with one of the provided `strings`.\n *\n * ## Usage\n * ```ts\n * startsWithOneOf('ab', 'a', 'c'); // true\n * startsWithOneOf('cc', 'a', 'b'); // false\n * ```\n *\n * @param str\n * @param strings\n * @returns\n */\nexport const startsWithOneOf = (str: string, strings: string[]): boolean => {\n\tfor (const s of strings) {\n\t\tif (str.startsWith(s)) return true;\n\t}\n\n\treturn false;\n};\n\n/** Returns true if `str` starts with one of the provided `strings`.\n *\n * ## Usage\n * ```ts\n * endsWithOneOf('cb', 'a', 'b'); // true\n * endsWithOneOf('cc', 'a', 'b'); // false\n * ```\n *\n * @param str\n * @param strings\n * @returns\n */\nexport const endsWithOneOf = (str: string, strings: string[]): boolean => {\n\tfor (const s of strings) {\n\t\tif (str.endsWith(s)) return true;\n\t}\n\n\treturn false;\n};\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'master';\n\nexport interface BitBucketProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `bitbucket/ieedan/std`\n *\n * `https://bitbucket.org/ieedan/std/src/main/`\n *\n * `https://bitbucket.org/ieedan/std/src/next/`\n *\n * `https://bitbucket.org/ieedan/std/src/v2.0.0/`\n *\n */\nexport const bitbucket: RegistryProvider = {\n\tname: 'bitbucket',\n\n\tmatches: (url) => startsWithOneOf(url.toLowerCase(), ['bitbucket', 'https://bitbucket.org']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://bitbucket.org/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = bitbucket.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}`,\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\t// @ts-ignore yes but we know\n\t\t\t\t\tref = data.mainbranch.name as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: bitbucket,\n\t\t} satisfies BitBucketProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== bitbucket.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${bitbucket.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, ref } = state as BitBucketProviderState;\n\n\t\treturn new URL(\n\t\t\tresourcePath,\n\t\t\t`https://api.bitbucket.org/2.0/repositories/${owner}/${repoName}/src/${ref}/`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nconst parseUrl = (\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } => {\n\tconst repo = url.replaceAll(/(https:\\/\\/bitbucket.org\\/)|(bitbucket\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === 'src') {\n\t\tref = rest[1];\n\t}\n\n\treturn {\n\t\turl: `bitbucket/${owner}/${repoName}${ref ? `/src/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n};\n","import color from 'chalk';\nimport { Octokit } from 'octokit';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface GitHubProviderState extends RegistryProviderState {\n\towner: string;\n\trepoName: string;\n\trefs: 'tags' | 'heads';\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://github.com/<owner>/<repo>`\n *\n * `github/<owner>/<repo>`\n *\n * `github/<owner>/<repo>/tree/<ref>`\n */\nexport const github: RegistryProvider = {\n\tname: 'github',\n\n\tmatches: (url) => startsWithOneOf(url.toLowerCase(), ['github', 'https://github.com']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn `https://github.com/${owner}/${repoName}`;\n\t},\n\n\tstate: async (url, { token } = {}) => {\n\t\tlet { url: normalizedUrl, owner, repoName, ref } = parseUrl(url, { fullyQualified: false });\n\n\t\tconst octokit = new Octokit({ auth: token });\n\n\t\t// checks if the type of the ref is tags or heads\n\t\tlet refs: 'heads' | 'tags' = 'heads';\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst { data: repo } = await octokit.rest.repos.get({ owner, repo: repoName });\n\n\t\t\t\tref = repo.default_branch;\n\t\t\t} catch {\n\t\t\t\t// we just want to continue on blissfully unaware the user will get an error later\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t} else {\n\t\t\t// no need to check if ref is main\n\n\t\t\t// this isn't a double case it's possible that DEFAULT_BRANCH and repo.default_branch are not equal\n\t\t\tif (ref !== DEFAULT_BRANCH) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { data: tags } = await octokit.rest.git.listMatchingRefs({\n\t\t\t\t\t\towner,\n\t\t\t\t\t\trepo: repoName,\n\t\t\t\t\t\tref: 'tags',\n\t\t\t\t\t});\n\n\t\t\t\t\tif (tags.some((tag) => tag.ref === `refs/tags/${ref}`)) {\n\t\t\t\t\t\trefs = 'tags';\n\t\t\t\t\t}\n\t\t\t\t} catch {\n\t\t\t\t\trefs = 'heads';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\trefs,\n\t\t\tref,\n\t\t\trepoName,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: github,\n\t\t} satisfies GitHubProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== github.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${github.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { owner, repoName, refs, ref } = state as GitHubProviderState;\n\n\t\treturn new URL(\n\t\t\tresourcePath,\n\t\t\t`https://raw.githubusercontent.com/${owner}/${repoName}/refs/${refs}/${ref}/`\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `token ${token}`],\n\n\tformatFetchError: (state, filePath) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nconst parseUrl = (\n\turl: string,\n\t{ fullyQualified = false }: ParseOptions\n): { url: string; owner: string; repoName: string; ref?: string; specifier?: string } => {\n\tconst repo = url.replaceAll(/(https:\\/\\/github.com\\/)|(github\\/)/g, '');\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest.length > 0) {\n\t\tif (rest[0] === 'tree') {\n\t\t\tref = rest[1];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: `github/${owner}/${repoName}${ref ? `/tree/${ref}` : ''}`,\n\t\tspecifier,\n\t\towner,\n\t\trepoName: repoName,\n\t\tref,\n\t};\n};\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** Joins the segments into a single url correctly handling leading and trailing slashes in each segment.\n *\n * ## Usage\n * ```ts\n * const url = join('https://example.com', '', 'api/', '/examples/');\n *\n * console.log(url); // https://example.com/api/examples\n * ```\n *\n * @param segments\n * @returns\n */\nconst join = (...segments: string[]) => {\n\treturn segments\n\t\t.map((s) => removeLeadingAndTrailingSlash(s))\n\t\t.filter(Boolean)\n\t\t.join('/');\n};\n\n/** Removes the leading and trailing slash from the segment (if they exist)\n * ## Usage\n * ```ts\n * const segment = removeLeadingAndTrailingSlash('/example/');\n *\n * console.log(segment); // 'example'\n * ```\n *\n * @param segment\n * @returns\n */\nconst removeLeadingAndTrailingSlash = (segment: string) => {\n\tconst newSegment = removeLeadingSlash(segment);\n\treturn removeTrailingSlash(newSegment);\n};\n\n/** Adds a leading and trailing to the beginning and end of the segment (if it doesn't already exist)\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingAndTrailingSlash('example');\n *\n * console.log(segment); // '/example/'\n * ```\n *\n * @param segment\n * @returns\n */\nconst addLeadingAndTrailingSlash = (segment: string) => {\n\t// this is a weird case so feel free to handle it however you think it makes the most sense\n\tif (segment === '') return '//';\n\n\tconst newSegment = addLeadingSlash(segment);\n\treturn addTrailingSlash(newSegment);\n};\n\n/** Removes the leading slash from the beginning of the segment (if it exists)\n *\n * ## Usage\n * ```ts\n * const segment = removeLeadingSlash('/example');\n *\n * console.log(segment); // 'example'\n * ```\n *\n * @param segment\n * @returns\n */\nconst removeLeadingSlash = (segment: string): string => {\n\tlet newSegment = segment;\n\tif (newSegment.startsWith('/')) {\n\t\tnewSegment = newSegment.slice(1);\n\t}\n\n\treturn newSegment;\n};\n\n/** Adds a leading slash to the beginning of the segment (if it doesn't already exist)\n *\n * ## Usage\n * ```ts\n * const segment = addLeadingSlash('example');\n *\n * console.log(segment); // '/example'\n * ```\n *\n * @param segment\n * @returns\n */\nconst addLeadingSlash = (segment: string): string => {\n\tlet newSegment = segment;\n\tif (!newSegment.startsWith('/')) {\n\t\tnewSegment = `/${newSegment}`;\n\t}\n\n\treturn newSegment;\n};\n\n/** Removes the trailing slash from the end of the segment (if it exists)\n *\n * ## Usage\n * ```ts\n * const segment = removeTrailingSlash('example/');\n *\n * console.log(segment); // 'example'\n * ```\n * @param segment\n * @returns\n */\nconst removeTrailingSlash = (segment: string): string => {\n\tlet newSegment = segment;\n\tif (newSegment.endsWith('/')) {\n\t\tnewSegment = newSegment.slice(0, newSegment.length - 1);\n\t}\n\n\treturn newSegment;\n};\n\n/** Adds a trailing slash to the end of the segment (if it doesn't already exist)\n *\n * ## Usage\n * ```ts\n * const segment = addTrailingSlash('example');\n *\n * console.log(segment); // 'example/'\n * ```\n *\n * @param segment\n * @returns\n */\nconst addTrailingSlash = (segment: string): string => {\n\tlet newSegment = segment;\n\tif (!newSegment.endsWith('/')) {\n\t\tnewSegment = `${newSegment}/`;\n\t}\n\n\treturn newSegment;\n};\n\n/** Removes the last segment of the url.\n *\n * ## Usage\n * ```ts\n * const url = upOneLevel('/first/second');\n *\n * console.log(url); // '/first'\n * ```\n *\n * @param url\n */\nconst upOneLevel = (url: string): string => {\n\tif (url === '/') return url;\n\n\tconst lastIndex = removeTrailingSlash(url).lastIndexOf('/');\n\n\treturn url.slice(0, url.length - lastIndex - 1);\n};\n\nexport {\n\tjoin,\n\tremoveLeadingSlash,\n\tremoveTrailingSlash,\n\taddTrailingSlash,\n\taddLeadingSlash,\n\taddLeadingAndTrailingSlash,\n\tremoveLeadingAndTrailingSlash,\n\tupOneLevel,\n};\n","import color from 'chalk';\nimport { startsWithOneOf } from '../blocks/ts/strings';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nconst DEFAULT_BRANCH = 'main';\n\nexport interface GitLabProviderState extends RegistryProviderState {\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref: string;\n}\n\n/** Valid paths\n *\n * `https://gitlab.com/ieedan/std`\n *\n * `https://gitlab.com/ieedan/std/-/tree/next`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0`\n *\n * `https://gitlab.com/ieedan/std/-/tree/v2.0.0?ref_type=tags`\n *\n * Self hosted:\n *\n * `gitlab:https://example.com/ieedan/std`\n */\nexport const gitlab: RegistryProvider = {\n\tname: 'gitlab',\n\n\tmatches: (url) =>\n\t\tstartsWithOneOf(url.toLowerCase(), ['gitlab/', 'gitlab:', 'https://gitlab.com']),\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { baseUrl, owner, repoName } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn u.join(baseUrl, owner, repoName);\n\t},\n\n\tstate: async (url, { token, fetch: f = fetch } = {}) => {\n\t\tlet {\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t} = parseUrl(url, { fullyQualified: false });\n\n\t\t// fetch default branch if ref was not provided\n\t\tif (ref === undefined) {\n\t\t\ttry {\n\t\t\t\tconst headers = new Headers();\n\n\t\t\t\tif (token !== undefined) {\n\t\t\t\t\tconst [key, value] = gitlab.authHeader!(token);\n\n\t\t\t\t\theaders.append(key, value);\n\t\t\t\t}\n\n\t\t\t\tconst response = await f(\n\t\t\t\t\tu.join(\n\t\t\t\t\t\tbaseUrl,\n\t\t\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`\n\t\t\t\t\t),\n\t\t\t\t\t{\n\t\t\t\t\t\theaders,\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\tif (response.ok) {\n\t\t\t\t\tconst data = await response.json();\n\n\t\t\t\t\t// @ts-ignore yes but we know\n\t\t\t\t\tref = data.default_branch as string;\n\t\t\t\t} else {\n\t\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// well find out it isn't correct later with a better error\n\t\t\t\tref = DEFAULT_BRANCH;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\towner,\n\t\t\trepoName,\n\t\t\tref,\n\t\t\tbaseUrl,\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: gitlab,\n\t\t} satisfies GitLabProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== gitlab.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${gitlab.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\tconst { baseUrl, owner, repoName, ref } = state as GitLabProviderState;\n\n\t\treturn new URL(\n\t\t\tu.join(\n\t\t\t\tbaseUrl,\n\t\t\t\t`api/v4/projects/${encodeURIComponent(`${owner}/${repoName}`)}`,\n\t\t\t\t`repository/files/${encodeURIComponent(resourcePath)}/raw?ref=${ref}`\n\t\t\t)\n\t\t);\n\t},\n\n\tauthHeader: (token) => ['PRIVATE-TOKEN', token],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching \\`${color.bold(filePath)}\\` from ${color.bold(state.url)}: ${error}.\n\n${color.bold('This may be for one of the following reasons:')}\n1. Either \\`${color.bold(filePath)}\\` or the containing repository doesn't exist\n2. Your repository path is incorrect (wrong branch, wrong tag)\n3. You are using an expired access token or a token that doesn't have access to this repository\n4. The cached state for this git provider is incorrect (try using ${color.bold('--no-cache')})\n`;\n\t},\n};\n\nconst parseUrl = (\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tbaseUrl: string;\n\towner: string;\n\trepoName: string;\n\tref?: string;\n\tspecifier?: string;\n} => {\n\tlet baseUrl = 'https://gitlab.com';\n\n\tif (url.startsWith('gitlab:')) {\n\t\tbaseUrl = new URL(url.slice(7)).origin;\n\t}\n\n\tconst repo = url.replaceAll(\n\t\t/gitlab\\/|https:\\/\\/gitlab\\.com\\/|gitlab:https?:\\/\\/[a-zA-Z0-9-]+\\.[a-zA-Z]+\\//g,\n\t\t''\n\t);\n\n\tlet [owner, repoName, ...rest] = repo.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = rest.slice(rest.length - 2).join('/');\n\n\t\trest = rest.slice(0, rest.length - 2);\n\t}\n\n\tlet ref: string | undefined;\n\n\tif (rest[0] === '-' && rest[1] === 'tree') {\n\t\tif (rest[2].includes('?')) {\n\t\t\tconst [tempRef] = rest[2].split('?');\n\n\t\t\tref = tempRef;\n\t\t} else {\n\t\t\tref = rest[2];\n\t\t}\n\t}\n\n\treturn {\n\t\turl: u.join(baseUrl, `${owner}/${repoName}${ref ? `/-/tree/${ref}` : ''}`),\n\t\tbaseUrl,\n\t\towner: owner,\n\t\trepoName: repoName,\n\t\tref,\n\t\tspecifier,\n\t};\n};\n","import color from 'chalk';\nimport * as u from '../blocks/ts/url';\nimport type { ParseOptions, RegistryProvider, RegistryProviderState } from './types';\n\nexport interface HttpProviderState extends RegistryProviderState {}\n\n/** Valid paths\n *\n *  `(https|http)://example.com`\n */\nexport const http: RegistryProvider = {\n\tname: 'http',\n\n\tmatches: (url) => {\n\t\t// if parsing is a success then it's a match\n\t\ttry {\n\t\t\tnew URL(url);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t},\n\n\tparse: (url, opts) => {\n\t\tconst parsed = parseUrl(url, opts);\n\n\t\treturn {\n\t\t\turl: parsed.url,\n\t\t\tspecifier: parsed.specifier,\n\t\t};\n\t},\n\n\tbaseUrl: (url) => {\n\t\tconst { url: u } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn new URL(u).origin;\n\t},\n\n\tstate: async (url) => {\n\t\tconst { url: normalizedUrl } = parseUrl(url, { fullyQualified: false });\n\n\t\treturn {\n\t\t\turl: normalizedUrl,\n\t\t\tprovider: http,\n\t\t} satisfies HttpProviderState;\n\t},\n\n\tresolveRaw: async (state, resourcePath) => {\n\t\t// essentially assert that we are using the correct state\n\t\tif (state.provider.name !== http.name) {\n\t\t\tthrow new Error(\n\t\t\t\t`You passed the incorrect state object (${state.provider.name}) to the ${http.name} provider.`\n\t\t\t);\n\t\t}\n\n\t\treturn new URL(resourcePath, state.url);\n\t},\n\n\tauthHeader: (token) => ['Authorization', `Bearer ${token}`],\n\n\tformatFetchError: (state, filePath, error) => {\n\t\treturn `There was an error fetching ${color.bold(new URL(filePath, state.url).toString())}\n\t\n${color.bold(error)}`;\n\t},\n};\n\nconst parseUrl = (\n\turl: string,\n\t{ fullyQualified }: ParseOptions\n): {\n\turl: string;\n\tspecifier?: string;\n} => {\n\tconst parsedUrl = new URL(url);\n\n\tlet segments = parsedUrl.pathname.split('/');\n\n\tlet specifier: string | undefined;\n\n\tif (fullyQualified) {\n\t\tspecifier = segments.slice(segments.length - 2).join('/');\n\n\t\tsegments = segments.slice(0, segments.length - 2);\n\t}\n\n\treturn {\n\t\turl: u.addTrailingSlash(u.join(parsedUrl.origin, ...segments)),\n\t\tspecifier,\n\t};\n};\n","/*\n\tInstalled from github/ieedan/std\n*/\n\n/** This is just a helper type used only within this file */\ntype _Result<T, E> = { ok: true; val: T } | { ok: false; err: E };\n\n/** Result allows you to show to a consumer that a function might throw and force them to handle it.\n *\n *  `T` Value type\n *\n *  `E` Error type\n *\n * ## Usage\n *\n * ```ts\n * function functionThatMightFail(): Result<T, E>;\n * ```\n *\n * ## Examples\n *\n * ```ts\n * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n *\n * const result = functionThatMightFail();\n *\n * console.log(result.unwrap()); // \"Hello, World!\"\n * ```\n */\nclass Result<T, E> {\n\tprivate readonly _result: _Result<T, E>;\n\n\tconstructor(result: _Result<T, E>) {\n\t\tthis._result = result;\n\t}\n\n\t/** Allows you to run callbacks based on the result.\n\t *\n\t * @param success callback to be run when result is success\n\t * @param failure callback to be run when result is failure\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const val = result.match(\n\t * \t(val) => val,\n\t * \t() => {\n\t * \t\tthrow new Error('oops!')\n\t * \t}\n\t * );\n\t *\n\t * console.log(val); // \"Hello, World!\"\n\t * ```\n\t */\n\tmatch<A, B = A>(success: (val: T) => A, failure: (err: E) => B): A | B {\n\t\tif (!this._result.ok) {\n\t\t\treturn failure(this._result.err);\n\t\t}\n\n\t\treturn success(this._result.val);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<A, E>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.map((val) => val.length);\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello, World!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const hello = result.map((val) => val.slice(0, 5));\n\t *\n\t * console.log(hello.unwrap()); // \"Hello\"\n\t * ```\n\t */\n\tmap<A>(fn: (val: T) => A): Result<A, E> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(fn(val)),\n\t\t\t(err) => Err(err)\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Err`\n\t * @param fn Mapping function to map in case of `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOr(1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOr<A>(defaultVal: A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** In the `Ok` case returns the mapped value using `fn` else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Err`\n\t * @param fn Mapping function called when `Ok`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapOrElse(() => 1, (val) => val.length);\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 3\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t */\n\tmapOrElse<A>(def: (err: E) => A, fn: (val: T) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => def(err)\n\t\t);\n\t}\n\n\t/** Maps `Result<T, E>` to `Result<T, A>` using the passed mapping function\n\t *\n\t * @param fn Mapping function\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErr((err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErr(() => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErr<A>(fn: (err: E) => A): Result<T, A> {\n\t\treturn this.match(\n\t\t\t(val) => Ok(val),\n\t\t\t(err) => Err(fn(err))\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned when `Ok`\n\t * @param fn Mapping function to map in case of `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOr(\"Should've been error\", (err) => getCodeMsg(err));\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Should've been error\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(10);\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const message = result.mapErrOr(\"Should've been error\", () => \"Error\");\n\t *\n\t * console.log(message); // \"Error\"\n\t * ```\n\t */\n\tmapErrOr<A>(defaultVal: A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(_) => defaultVal,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** In the `Err` case returns the mapped value using the function else returns value of `def`\n\t *\n\t * @param def Mapping function called when `Ok`\n\t * @param fn Mapping function called when `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.mapErrOrElse(() => \"Value\", (_) => \"Error!\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"foo\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapErrOrElse(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 1\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * const length = result.mapOr(() => 1, (val) => val.length);\n\t *\n\t * console.log(length); // 4\n\t * ```\n\t */\n\tmapErrOrElse<A>(def: (val: T) => A, fn: (err: E) => A): A {\n\t\treturn this.match(\n\t\t\t(val) => def(val),\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Returns true if result is `Ok`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isOk();\n\t * ```\n\t */\n\tisOk(): boolean {\n\t\treturn this.match(\n\t\t\t() => true,\n\t\t\t() => false\n\t\t);\n\t}\n\n\t/** Returns true if result is `Err`\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.isErr();\n\t * ```\n\t */\n\tisErr(): boolean {\n\t\treturn this.match(\n\t\t\t() => false,\n\t\t\t() => true\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrap();\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrap()); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrap(); // Error: Attempted to call `.unwrap()` on a non `Ok` value.\n\t * ```\n\t */\n\tunwrap(): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrap()` on a non `Ok` value.');\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return err if value is `Ok` throws generic error message.\n\t *\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErr();\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.unwrapErr(); // Error: Attempted to call `.unwrapErr()` on a non `Err` value.\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErr()); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErr(): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error('Attempted to call `.unwrapErr()` on a non `Err` value.');\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to unwrap the value if value is `Err` returns `defaultVal`\n\t *\n\t * @param defaultVal Value to be returned if `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOr(7);\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t */\n\tunwrapOr(defaultVal: T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(_) => defaultVal\n\t\t);\n\t}\n\n\t/** Tries to unwrap the error if vale is `Ok` returns `defaultVal`\n\t *\n\t * @param defaultVal\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOr(\"Error\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"Yellow!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOr(\"Yellow!\")); // \"oops!\"\n\t * ```\n\t */\n\tunwrapErrOr(defaultVal: E): E {\n\t\treturn this.match(\n\t\t\t() => defaultVal,\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return the value if value is `Err` calls `fn`\n\t *\n\t * @param fn Function called if `Err`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapOrElse(() => \"Hello!\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"oops!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapOrElse(() => \"Hello!\")); // \"Hello!\"\n\t * ```\n\t *\n\t */\n\tunwrapOrElse(fn: (err: E) => T): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t(err) => fn(err)\n\t\t);\n\t}\n\n\t/** Tries to return the error if value is `Ok` calls `fn`\n\t *\n\t * @param fn Function called if `Ok`\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.unwrapErrOrElse(() => \"Error!\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"oops!\")); // \"oops!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.unwrapErrOrElse(() => \"Hello!\")); // \"oops!\"\n\t * ```\n\t *\n\t */\n\tunwrapErrOrElse(fn: (val: T) => E): E {\n\t\treturn this.match(\n\t\t\t(val) => fn(val),\n\t\t\t(err) => err\n\t\t);\n\t}\n\n\t/** Tries to return value if value is `Err` throws custom error message.\n\t *\n\t * @param message Message to show when value is `Err`\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expect(\"Custom message\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expect(\"I failed!\")); // \"Hello!\"\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * result.expect(\"I failed!\"); // Error: I failed!\n\t * ```\n\t */\n\texpect(message: string): T {\n\t\treturn this.match(\n\t\t\t(val) => val,\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t}\n\t\t);\n\t}\n\n\t/** Tries to return error value if value is `Ok` throws custom error message\n\t *\n\t * @param message\n\t * @returns\n\t *\n\t * ## Usage\n\t *\n\t * ```ts\n\t * result.expectErr(\"Custom message\");\n\t * ```\n\t *\n\t * ## Examples\n\t *\n\t * ### When `Ok`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Ok(\"Hello!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // Error: I failed!\n\t * ```\n\t *\n\t * ### When `Err`\n\t *\n\t * ```ts\n\t * const functionThatMightFail = (): Result<string, string> => Err(\"oops!\");\n\t *\n\t * const result = functionThatMightFail();\n\t *\n\t * console.log(result.expectErr(\"I failed!\")); // \"oops!\"\n\t * ```\n\t */\n\texpectErr(message: string): E {\n\t\treturn this.match(\n\t\t\t() => {\n\t\t\t\tthrow new Error(message);\n\t\t\t},\n\t\t\t(err) => err\n\t\t);\n\t}\n}\n\n/** Returns a new `Ok` result type with the provided value\n *\n * @param val Value of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Ok(true);\n * ```\n *\n * ## Examples\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nconst Ok = <T>(val: T): Result<T, never> => {\n\treturn new Result<T, never>({ ok: true, val });\n};\n\n/** Returns a new `Err` result type with the provided error\n *\n * @param err Error of the result\n * @returns\n *\n * ## Usage\n *\n * ```ts\n * Err(\"I failed!\");\n * ```\n *\n * ## Examples\n *\n * ```ts\n * const functionThatCanFail = (condition) => {\n * \tif (condition) {\n * \t\tOk(\"Success\")\n * \t}\n *\n * \treturn Err(\"Failure\");\n * }\n * ```\n */\nconst Err = <E>(err: E): Result<never, E> => {\n\treturn new Result<never, E>({ ok: false, err });\n};\n\nexport { type Result, Ok, Err };\n","import * as v from 'valibot';\nimport { type Manifest, categorySchema, manifestSchema } from '../types';\nimport { Err, Ok, type Result } from './blocks/ts/result';\n\n/** Parses the json string (if it can be) into a manifest.\n *\n * @param json\n */\nexport const parseManifest = (json: string): Result<Manifest, string> => {\n\tlet parsed: unknown;\n\n\ttry {\n\t\tparsed = JSON.parse(json);\n\t} catch (err) {\n\t\treturn Err(`Error parsing manifest json ${err}`);\n\t}\n\n\t// first gen array-based config\n\tif (Array.isArray(parsed)) {\n\t\tconst validated = v.safeParse(v.array(categorySchema), parsed);\n\n\t\tif (!validated.success) {\n\t\t\treturn Err(\n\t\t\t\t`Error parsing categories (array-based config) ${validated.issues.join(' ')}`\n\t\t\t);\n\t\t}\n\n\t\treturn Ok({\n\t\t\tcategories: validated.output,\n\t\t});\n\t}\n\n\tconst validated = v.safeParse(manifestSchema, parsed);\n\n\tif (!validated.success) {\n\t\treturn Err(`Error parsing manifest ${validated.issues.join(' ')}`);\n\t}\n\n\treturn Ok(validated.output);\n};\n","import { MANIFEST_FILE } from '../../constants';\nimport type { Manifest } from '../../types';\nimport { Err, Ok, type Result } from '../blocks/ts/result';\nimport { parseManifest } from '../manifest';\nimport { type AzureProviderState, azure } from './azure';\nimport { type BitBucketProviderState, bitbucket } from './bitbucket';\nimport { type GitHubProviderState, github } from './github';\nimport { type GitLabProviderState, gitlab } from './gitlab';\nimport { http } from './http';\nimport type { RegistryProvider, RegistryProviderState } from './types';\n\nexport const providers = [github, gitlab, bitbucket, azure, http];\n\nexport const selectProvider = (url: string): RegistryProvider | undefined => {\n\tconst provider = providers.find((p) => p.matches(url));\n\n\treturn provider;\n};\n\nexport type FetchOptions = {\n\ttoken: string;\n\t/** Override the fetch method. If you are using this in a node environment you will want to pass `node-fetch` */\n\tfetch?: typeof fetch;\n\tverbose: (str: string) => void;\n};\n\nexport const fetchRaw = async (\n\tstate: RegistryProviderState,\n\tresourcePath: string,\n\t{ verbose, fetch: f = fetch, token }: Partial<FetchOptions> = {}\n): Promise<Result<string, string>> => {\n\tconst url = await state.provider.resolveRaw(state, resourcePath);\n\n\tverbose?.(`Trying to fetch from ${url}`);\n\n\ttry {\n\t\tconst headers = new Headers();\n\n\t\tif (token !== undefined && state.provider.authHeader) {\n\t\t\tconst [key, value] = state.provider.authHeader(token);\n\n\t\t\theaders.append(key, value);\n\t\t}\n\n\t\tconst response = await f(url, { headers });\n\n\t\tverbose?.(`Got a response from ${url} ${response.status} ${response.statusText}`);\n\n\t\tif (!response.ok) {\n\t\t\treturn Err(\n\t\t\t\tstate.provider.formatFetchError(\n\t\t\t\t\tstate,\n\t\t\t\t\tresourcePath,\n\t\t\t\t\t`${response.status} ${response.statusText}`\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\n\t\treturn Ok(await response.text());\n\t} catch (err) {\n\t\treturn Err(state.provider.formatFetchError(state, resourcePath, err));\n\t}\n};\n\nexport const fetchManifest = async (\n\tstate: RegistryProviderState,\n\t{ fetch: f = fetch, ...rest }: Partial<FetchOptions> = {}\n): Promise<Result<Manifest, string>> => {\n\tconst manifest = await fetchRaw(state, MANIFEST_FILE, { fetch: f, ...rest });\n\n\tif (manifest.isErr()) return Err(manifest.unwrapErr());\n\n\treturn parseManifest(manifest.unwrap());\n};\n\nexport * from './types';\n\nexport {\n\tgithub,\n\tgitlab,\n\tbitbucket,\n\tazure,\n\thttp,\n\ttype AzureProviderState,\n\ttype GitHubProviderState,\n\ttype GitLabProviderState,\n\ttype BitBucketProviderState,\n};\n"]}